Tests for rule engine

    >>> import concordia.matchtool.rule as rule
    >>> import logging as l

Verify integrity of rule confidence values

    >>> print rule.RULECONFCERT
    1.0
    >>> print rule.RULECONFHIGH
    0.7
    >>> print rule.RULECONFLOW
    0.3
    >>> print rule.RULECONFNONE
    0.0

Verify integrity of rule type constants

    >>> print rule.RULETYPEEXACT
    1
    >>> print rule.RULETYPECASELESS
    2
    >>> print rule.RULETYPEAPPROX
    3

Check that the various types of rules behave as expected 

    >>> r = rule.Rule()
    >>> r()
    True
    
    >>> r = rule.RuleExact()
    >>> r('cat','dog')
    False
    >>> r('cat','cat')
    True
    >>> r('cat', 'Cat')
    False

    >>> r = rule.RuleCaseless()
    >>> r('cat','dog')
    False
    >>> r('cat','cat')
    True
    >>> r('cat','Cat')
    True
    
    >>> r = rule.RuleApprox()
    >>> d = 'bat'
    >>> r('cat','dog')
    False
    >>> r('cat','cat')
    True
    >>> r('cat','Cat')
    True
    >>> r('cat','bat')
    True
    >>> r('Athenai','Athenae')
    True
    
    >>> r = rule.RuleApprox(0.9)
    >>> r('Athenai','Athenae')
    False

Construct and evaluate some rule sets

    >>> rscript = [('exact',0,0), ('exact',1,1), ('exact',2,2)]
    >>> fromdir = ('65', 'B3', 'Aphrodisias/Ninoe')
    >>> frommap = ('65', 'B3', 'Aphrodisias/Ninoe')
    >>> rs = rule.RuleSet(rscript, rule.RULECONFCERT)
    >>> rs(fromdir, frommap) == rule.RULECONFCERT
    True
    >>> frommap2 = ('65', 'B2', 'Aphrodisias/Ninoe')
    >>> rs(fromdir, frommap2) == rule.RULECONFCERT
    False
    >>> rscript = [('exact',0,0), ('approx',1,1), ('exact',2,2)]
    >>> rs = rule.RuleSet(rscript, rule.RULECONFHIGH)
    >>> rs(fromdir, frommap2) == rule.RULECONFHIGH
    True
